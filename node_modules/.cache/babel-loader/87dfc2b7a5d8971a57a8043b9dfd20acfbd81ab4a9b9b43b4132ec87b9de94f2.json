{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\todo-app\\\\src\\\\components\\\\TodoList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport TodoItem from './TodoItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TodoList() {\n  _s();\n  const [tasks, setTasks] = useState(() => {\n    // Retrieve saved tasks from localStorage\n    const savedTasks = localStorage.getItem('tasks');\n    return savedTasks ? JSON.parse(savedTasks) : [];\n  });\n  const [text, setText] = useState('');\n\n  // Save tasks to localStorage whenever they change\n  useEffect(() => {\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n  }, [tasks]);\n\n  // Function to add a task\n  function addTask(text) {\n    if (text.trim() === '') {\n      alert('Task cannot be empty');\n      return;\n    }\n    const newTask = {\n      id: Date.now(),\n      text,\n      completed: false\n    };\n    setTasks([...tasks, newTask]);\n    setText('');\n  }\n\n  // Function to delete a task\n  function deleteTask(id) {\n    setTasks(tasks.filter(task => task.id !== id));\n  }\n\n  // Function to toggle task completion\n  function toggleCompleted(id) {\n    setTasks(tasks.map(task => task.id === id ? {\n      ...task,\n      completed: !task.completed\n    } : task));\n  }\n\n  // Function to clear completed tasks\n  function clearCompletedTasks() {\n    setTasks(tasks.filter(task => !task.completed));\n  }\n\n  // Count remaining tasks\n  const remainingTasks = tasks.filter(task => !task.completed).length;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: text,\n      onChange: e => setText(e.target.value),\n      placeholder: \"Add a new task...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => addTask(text),\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-list\",\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(TodoItem, {\n        task: task,\n        deleteTask: deleteTask,\n        toggleCompleted: toggleCompleted\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"footer\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [remainingTasks, \" \", remainingTasks === 1 ? 'task' : 'tasks', \" remaining\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: clearCompletedTasks,\n        disabled: tasks.every(task => !task.completed),\n        children: \"Clear Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(TodoList, \"ONyj6PiNjhg6QjsEfkV9+FlnCro=\");\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useState","useEffect","TodoItem","jsxDEV","_jsxDEV","TodoList","_s","tasks","setTasks","savedTasks","localStorage","getItem","JSON","parse","text","setText","setItem","stringify","addTask","trim","alert","newTask","id","Date","now","completed","deleteTask","filter","task","toggleCompleted","map","clearCompletedTasks","remainingTasks","length","className","children","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","every","_c","$RefreshReg$"],"sources":["C:/Users/HP/todo-app/src/components/TodoList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport TodoItem from './TodoItem';\r\n\r\nfunction TodoList() {\r\n  const [tasks, setTasks] = useState(() => {\r\n    // Retrieve saved tasks from localStorage\r\n    const savedTasks = localStorage.getItem('tasks');\r\n    return savedTasks ? JSON.parse(savedTasks) : [];\r\n  });\r\n\r\n  const [text, setText] = useState('');\r\n\r\n  // Save tasks to localStorage whenever they change\r\n  useEffect(() => {\r\n    localStorage.setItem('tasks', JSON.stringify(tasks));\r\n  }, [tasks]);\r\n\r\n  // Function to add a task\r\n  function addTask(text) {\r\n    if (text.trim() === '') {\r\n      alert('Task cannot be empty');\r\n      return;\r\n    }\r\n    const newTask = {\r\n      id: Date.now(),\r\n      text,\r\n      completed: false,\r\n    };\r\n    setTasks([...tasks, newTask]);\r\n    setText('');\r\n  }\r\n\r\n  // Function to delete a task\r\n  function deleteTask(id) {\r\n    setTasks(tasks.filter((task) => task.id !== id));\r\n  }\r\n\r\n  // Function to toggle task completion\r\n  function toggleCompleted(id) {\r\n    setTasks(\r\n      tasks.map((task) => (task.id === id ? { ...task, completed: !task.completed } : task))\r\n    );\r\n  }\r\n\r\n  // Function to clear completed tasks\r\n  function clearCompletedTasks() {\r\n    setTasks(tasks.filter((task) => !task.completed));\r\n  }\r\n\r\n  // Count remaining tasks\r\n  const remainingTasks = tasks.filter((task) => !task.completed).length;\r\n\r\n  return (\r\n    <div className=\"todo-list\">\r\n      <input\r\n        value={text}\r\n        onChange={(e) => setText(e.target.value)}\r\n        placeholder=\"Add a new task...\"\r\n      />\r\n      <button onClick={() => addTask(text)}>Add</button>\r\n\r\n      <div className=\"task-list\">\r\n        {tasks.map((task) => (\r\n          <TodoItem\r\n            key={task.id}\r\n            task={task}\r\n            deleteTask={deleteTask}\r\n            toggleCompleted={toggleCompleted}\r\n          />\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"footer\">\r\n        <p>{remainingTasks} {remainingTasks === 1 ? 'task' : 'tasks'} remaining</p>\r\n        <button onClick={clearCompletedTasks} disabled={tasks.every((task) => !task.completed)}>\r\n          Clear Completed\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}