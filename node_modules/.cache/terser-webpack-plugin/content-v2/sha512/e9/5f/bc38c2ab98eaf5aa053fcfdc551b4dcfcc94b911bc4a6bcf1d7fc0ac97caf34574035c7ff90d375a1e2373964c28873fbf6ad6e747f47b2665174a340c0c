{"map":"{\"version\":3,\"sources\":[\"C:/Users/HP/todo-app/src/App.js\",\"C:/Users/HP/todo-app/src/reportWebVitals.js\",\"C:/Users/HP/todo-app/src/index.js\"],\"names\":[\"App\",\"tasks\",\"setTasks\",\"useState\",\"id\",\"text\",\"completed\",\"searchText\",\"setSearchText\",\"filter\",\"setFilter\",\"darkMode\",\"setDarkMode\",\"showAddSection\",\"setShowAddSection\",\"newTaskText\",\"setNewTaskText\",\"editingTaskId\",\"setEditingTaskId\",\"editedTaskText\",\"setEditedTaskText\",\"filteredTasks\",\"task\",\"toLowerCase\",\"includes\",\"React\",\"createElement\",\"className\",\"type\",\"placeholder\",\"value\",\"onChange\",\"e\",\"target\",\"onClick\",\"map\",\"key\",\"checked\",\"handleToggleCompleted\",\"Fragment\",\"handleSaveEdit\",\"taskToEdit\",\"find\",\"handleEditTask\",\"FontAwesomeIcon\",\"icon\",\"faPencilAlt\",\"style\",\"color\",\"handleDeleteTask\",\"faTrash\",\"handleAddTask\",\"trim\",\"newTask\",\"length\",\"reportWebVitals\",\"onPerfEntry\",\"Function\",\"__webpack_require__\",\"then\",\"bind\",\"_ref\",\"getCLS\",\"getFID\",\"getFCP\",\"getLCP\",\"getTTFB\",\"ReactDOM\",\"createRoot\",\"document\",\"getElementById\",\"render\",\"StrictMode\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React, { useState } from \\\"react\\\";\\r\\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\\r\\nimport { faPencilAlt, faTrash } from '@fortawesome/free-solid-svg-icons';\\r\\n\\r\\nimport \\\"./App.css\\\";\\r\\n\\r\\nfunction App() {\\r\\n  const [tasks, setTasks] = useState([\\r\\n    { id: 1, text: \\\"Read recommended book again\\\", completed: true },\\r\\n    { id: 2, text: \\\"Vacation planning\\\", completed: false },\\r\\n    { id: 3, text: \\\"Cook dinner\\\", completed: false },\\r\\n    { id: 4, text: \\\"Sign up for training\\\", completed: false },\\r\\n  ]);\\r\\n\\r\\n  const [searchText, setSearchText] = useState(\\\"\\\");\\r\\n  const [filter, setFilter] = useState(\\\"all\\\");\\r\\n  const [darkMode, setDarkMode] = useState(false);\\r\\n  const [showAddSection, setShowAddSection] = useState(false);\\r\\n  const [newTaskText, setNewTaskText] = useState(\\\"\\\");\\r\\n  const [editingTaskId, setEditingTaskId] = useState(null);\\r\\n  const [editedTaskText, setEditedTaskText] = useState(\\\"\\\");\\r\\n\\r\\n  const handleToggleCompleted = (id) => {\\r\\n    setTasks(tasks.map((task) =>\\r\\n      task.id === id ? { ...task, completed: !task.completed } : task\\r\\n    ));\\r\\n  };\\r\\n\\r\\n  const handleAddTask = () => {\\r\\n    if (newTaskText.trim()) {\\r\\n      const newTask = {\\r\\n        id: tasks.length + 1,\\r\\n        text: newTaskText,\\r\\n        completed: false,\\r\\n      };\\r\\n      setTasks([...tasks, newTask]);\\r\\n      setNewTaskText(\\\"\\\");\\r\\n      setShowAddSection(false);\\r\\n    }\\r\\n  };\\r\\n\\r\\n  const handleEditTask = (id) => {\\r\\n    const taskToEdit = tasks.find((task) => task.id === id);\\r\\n    setEditingTaskId(id);\\r\\n    setEditedTaskText(taskToEdit.text);\\r\\n  };\\r\\n\\r\\n  const handleSaveEdit = (id) => {\\r\\n    setTasks(tasks.map((task) =>\\r\\n      task.id === id ? { ...task, text: editedTaskText } : task\\r\\n    ));\\r\\n    setEditingTaskId(null);\\r\\n    setEditedTaskText(\\\"\\\");\\r\\n  };\\r\\n\\r\\n  const handleDeleteTask = (id) => {\\r\\n    setTasks(tasks.filter((task) => task.id !== id));\\r\\n  };\\r\\n\\r\\n  const filteredTasks = tasks\\r\\n    .filter((task) => {\\r\\n      if (filter === \\\"completed\\\") return task.completed;\\r\\n      if (filter === \\\"uncompleted\\\") return !task.completed;\\r\\n      return true;\\r\\n    })\\r\\n    .filter((task) => task.text.toLowerCase().includes(searchText.toLowerCase()));\\r\\n\\r\\n  return (\\r\\n    <div className={`todo-app ${darkMode ? \\\"dark-mode\\\" : \\\"\\\"}`}>\\r\\n      <div className=\\\"todo-header\\\">\\r\\n        <h1>TODO LIST</h1>\\r\\n        <div className=\\\"controls-container\\\">\\r\\n          <input\\r\\n            type=\\\"text\\\"\\r\\n            placeholder=\\\"Search tasks...\\\"\\r\\n            value={searchText}\\r\\n            onChange={(e) => setSearchText(e.target.value)}\\r\\n          />\\r\\n          <select value={filter} onChange={(e) => setFilter(e.target.value)}>\\r\\n            <option value=\\\"all\\\">ALL</option>\\r\\n            <option value=\\\"completed\\\">Completed</option>\\r\\n            <option value=\\\"uncompleted\\\">Uncompleted</option>\\r\\n          </select>\\r\\n          <button\\r\\n            className=\\\"theme-toggle-btn\\\"\\r\\n            onClick={() => setDarkMode(!darkMode)}\\r\\n          >\\r\\n            {darkMode ? \\\"ðŸŒž Light Mode\\\" : \\\"ðŸŒ™ Dark Mode\\\"}\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div className=\\\"todo-list\\\">\\r\\n        {filteredTasks.map((task) => (\\r\\n          <div\\r\\n            key={task.id}\\r\\n            className={`todo-item ${task.completed ? \\\"completed\\\" : \\\"\\\"}`}\\r\\n          >\\r\\n            <input\\r\\n              type=\\\"checkbox\\\"\\r\\n              checked={task.completed}\\r\\n              onChange={() => handleToggleCompleted(task.id)}\\r\\n            />\\r\\n            {editingTaskId === task.id ? (\\r\\n              <>\\r\\n                <input\\r\\n                  type=\\\"text\\\"\\r\\n                  className=\\\"edit-input\\\"\\r\\n                  value={editedTaskText}\\r\\n                  onChange={(e) => setEditedTaskText(e.target.value)}\\r\\n                />\\r\\n                <button className=\\\"save-btn\\\" onClick={() => handleSaveEdit(task.id)}>\\r\\n                  Save\\r\\n                </button>\\r\\n              </>\\r\\n            ) : (\\r\\n              <>\\r\\n                <p>{task.text}</p>\\r\\n                <div className=\\\"action-buttons\\\">\\r\\n                  <button className=\\\"edit-btn\\\" onClick={() => handleEditTask(task.id)}>\\r\\n                    <FontAwesomeIcon icon={faPencilAlt} style={{ color: 'gray' }} />\\r\\n                  </button>\\r\\n                  <button className=\\\"delete-btn\\\" onClick={() => handleDeleteTask(task.id)}>\\r\\n                    <FontAwesomeIcon icon={faTrash} style={{ color: 'gray' }} />\\r\\n                  </button>\\r\\n                </div>\\r\\n              </>\\r\\n            )}\\r\\n          </div>\\r\\n        ))}\\r\\n      </div>\\r\\n\\r\\n      {showAddSection && (\\r\\n        <div className=\\\"add-task-section\\\">\\r\\n          <input\\r\\n            type=\\\"text\\\"\\r\\n            className=\\\"new-task-input\\\"\\r\\n            placeholder=\\\"New task\\\"\\r\\n            value={newTaskText}\\r\\n            onChange={(e) => setNewTaskText(e.target.value)}\\r\\n          />\\r\\n          <button className=\\\"add-task-btn\\\" onClick={handleAddTask}>\\r\\n            Add\\r\\n          </button>\\r\\n        </div>\\r\\n      )}\\r\\n      <button className=\\\"add-btn\\\" onClick={() => setShowAddSection(!showAddSection)}>\\r\\n        +\\r\\n      </button>\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\\r\\nexport default App;\\r\\n\",\"const reportWebVitals = onPerfEntry => {\\n  if (onPerfEntry && onPerfEntry instanceof Function) {\\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\\n      getCLS(onPerfEntry);\\n      getFID(onPerfEntry);\\n      getFCP(onPerfEntry);\\n      getLCP(onPerfEntry);\\n      getTTFB(onPerfEntry);\\n    });\\n  }\\n};\\n\\nexport default reportWebVitals;\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom/client';\\nimport './index.css';\\nimport App from './App';\\nimport reportWebVitals from './reportWebVitals';\\n\\nconst root = ReactDOM.createRoot(document.getElementById('root'));\\nroot.render(\\n  <React.StrictMode>\\n    <App />\\n  </React.StrictMode>\\n);\\n\\n// If you want to start measuring performance in your app, pass a function\\n// to log results (for example: reportWebVitals(console.log))\\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\\nreportWebVitals();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{15:function(e,t,a){},18:function(e,t,a){},19:function(e,t,a){\"use strict\";a.r(t);var n=a(0),l=a.n(n),c=a(5),o=a.n(c),d=(a(15),a(3)),m=a(2);a(18);var i=function(){const[e,t]=Object(n.useState)([{id:1,text:\"Read recommended book again\",completed:!0},{id:2,text:\"Vacation planning\",completed:!1},{id:3,text:\"Cook dinner\",completed:!1},{id:4,text:\"Sign up for training\",completed:!1}]),[a,c]=Object(n.useState)(\"\"),[o,i]=Object(n.useState)(\"all\"),[r,s]=Object(n.useState)(!1),[u,p]=Object(n.useState)(!1),[E,b]=Object(n.useState)(\"\"),[g,v]=Object(n.useState)(null),[k,h]=Object(n.useState)(\"\"),C=e.filter(e=>\"completed\"===o?e.completed:\"uncompleted\"!==o||!e.completed).filter(e=>e.text.toLowerCase().includes(a.toLowerCase()));return l.a.createElement(\"div\",{className:`todo-app ${r?\"dark-mode\":\"\"}`},l.a.createElement(\"div\",{className:\"todo-header\"},l.a.createElement(\"h1\",null,\"TODO LIST\"),l.a.createElement(\"div\",{className:\"controls-container\"},l.a.createElement(\"input\",{type:\"text\",placeholder:\"Search tasks...\",value:a,onChange:e=>c(e.target.value)}),l.a.createElement(\"select\",{value:o,onChange:e=>i(e.target.value)},l.a.createElement(\"option\",{value:\"all\"},\"ALL\"),l.a.createElement(\"option\",{value:\"completed\"},\"Completed\"),l.a.createElement(\"option\",{value:\"uncompleted\"},\"Uncompleted\")),l.a.createElement(\"button\",{className:\"theme-toggle-btn\",onClick:()=>s(!r)},r?\"\\ud83c\\udf1e Light Mode\":\"\\ud83c\\udf19 Dark Mode\"))),l.a.createElement(\"div\",{className:\"todo-list\"},C.map(a=>l.a.createElement(\"div\",{key:a.id,className:`todo-item ${a.completed?\"completed\":\"\"}`},l.a.createElement(\"input\",{type:\"checkbox\",checked:a.completed,onChange:()=>(a=>{t(e.map(e=>e.id===a?{...e,completed:!e.completed}:e))})(a.id)}),g===a.id?l.a.createElement(l.a.Fragment,null,l.a.createElement(\"input\",{type:\"text\",className:\"edit-input\",value:k,onChange:e=>h(e.target.value)}),l.a.createElement(\"button\",{className:\"save-btn\",onClick:()=>(a=>{t(e.map(e=>e.id===a?{...e,text:k}:e)),v(null),h(\"\")})(a.id)},\"Save\")):l.a.createElement(l.a.Fragment,null,l.a.createElement(\"p\",null,a.text),l.a.createElement(\"div\",{className:\"action-buttons\"},l.a.createElement(\"button\",{className:\"edit-btn\",onClick:()=>(t=>{const a=e.find(e=>e.id===t);v(t),h(a.text)})(a.id)},l.a.createElement(d.a,{icon:m.a,style:{color:\"gray\"}})),l.a.createElement(\"button\",{className:\"delete-btn\",onClick:()=>(a=>{t(e.filter(e=>e.id!==a))})(a.id)},l.a.createElement(d.a,{icon:m.b,style:{color:\"gray\"}}))))))),u&&l.a.createElement(\"div\",{className:\"add-task-section\"},l.a.createElement(\"input\",{type:\"text\",className:\"new-task-input\",placeholder:\"New task\",value:E,onChange:e=>b(e.target.value)}),l.a.createElement(\"button\",{className:\"add-task-btn\",onClick:()=>{if(E.trim()){const a={id:e.length+1,text:E,completed:!1};t([...e,a]),b(\"\"),p(!1)}}},\"Add\")),l.a.createElement(\"button\",{className:\"add-btn\",onClick:()=>p(!u)},\"+\"))};var r=e=>{e&&e instanceof Function&&a.e(3).then(a.bind(null,20)).then(t=>{let{getCLS:a,getFID:n,getFCP:l,getLCP:c,getTTFB:o}=t;a(e),n(e),l(e),c(e),o(e)})};o.a.createRoot(document.getElementById(\"root\")).render(l.a.createElement(l.a.StrictMode,null,l.a.createElement(i,null))),r()},6:function(e,t,a){e.exports=a(19)}},[[6,1,2]]]);","extractedComments":[]}